parameters:
  nodeVersion: ''
  npmConfigRuntime: ''
  npmConfigTarget: ''
  npmConfigDistUrl: ''

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '${{ parameters.nodeVersion }}'
  displayName: 'Install Node.js ${{ parameters.nodeVersion }}'
- bash: |
    choco install -y nvm
    export PATH=$NVM_HOME:$PATH
    nvm install ${{ parameters.nodeVersion }} $(nodeArch)
    nvm use ${{ parameters.nodeVersion }} $(nodeArch)
    ln -sf "$NVM_SYMLINK/node" "$NODE_SYMLINK/node"
  env: {
    NVM_HOME: "/C/ProgramData/nvm",
    NVM_SYMLINK: "/C/ProgramData/nvm/v$(parameters.nodeVersion)",
    NODE_SYMLINK: "/C/Program Files/nodejs",
  }
  condition: and(contains(variables['imageName'], 'win'), eq(variables['nodeArch'], '32'))
  displayName: 'Install Node.js $(nodVersion) 32-bit'
- bash: |
    node -v
    npm i --build-from-source
    npm run package-prebuilt
  env: {
    npm_config_runtime: '${{ parameters.npmConfigRuntime }}',
    npm_config_target: '${{ parameters.npmConfigTarget }}',
    npm_config_disturl: '${{ parameters.npmConfigDistUrl }}',
    NODE_VERSION: '${{ parameters.nodeVersion }}',
    NODE_ARCH: '$(nodeArch)',
  }
  displayName: 'Build'
- bash: |
    cp build/stage/**/*.tar.gz "$(Build.ArtifactStagingDirectory)"
  displayName: 'Copy artifacts'
- task: GitHubRelease@0
  inputs:
    gitHubConnection: 'waylandCI'
    repositoryName: 'NordicSemiconductor/pc-ble-driver-js'
    action: 'edit'
    tagSource: 'Git tag'
    tag: '$(Build.SourceBranchName)'
    assetUploadMode: 'replace'
    isDraft: 'true'
    addChangeLog: 'false'
  condition: ne(variables['Build.Reason'], 'PullRequest')